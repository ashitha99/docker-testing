name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '18'

    - name: Upgrade npm
      run: npm install -g npm@latest

    - name: Install dependencies
      run: npm install

    - name: Run tests
      run: npm test

    - name: Build Docker image
      run: docker build -t my-strapi-app .

    - name: Login to Docker Hub
      env:
        DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      run: echo $DOCKER_PASSWORD | docker login -u $DOCKER_USERNAME --password-stdin

    - name: Push Docker image to Docker Hub
      run: docker push my-strapi-app

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1

    - name: Terraform Init
      run: terraform init

    - name: Terraform Apply
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      run: terraform apply -auto-approve

    - name: Get Instance Public IP
      id: get_ip
      run: echo "::set-output name=public_ip::$(terraform output -raw instance_public_ip)"

    - name: Deploy Strapi to EC2
      env:
        DOCKER_IMAGE: my-strapi-app
        EC2_PUBLIC_IP: ${{ steps.get_ip.outputs.public_ip }}
        SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
      run: |
        echo "$SSH_PRIVATE_KEY" > ssh_key
        chmod 600 ssh_key
        ssh -o StrictHostKeyChecking=no -i ssh_key ec2-user@${{ steps.get_ip.outputs.public_ip }} << 'EOF'
          docker pull $DOCKER_IMAGE
          docker stop strapi || true
          docker rm strapi || true
          docker run -d -p 1337:1337 --name strapi $DOCKER_IMAGE
        EOF
